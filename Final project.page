The final project counts for the the *contrôle continu* mark. You are required to implement a simple multiuser web application in [Node.js](). You will be evaluated on the basis of your source code, a brief written document, and an oral presentation.


# Constraints

The project **MUST**:

- Be written in [Node.js]().

- Be **stateful**, i.e. recognize users from one visit to the other. This can be achieved through any combination of the following methods:
    - cookies,
    - sessions (memory based or cookie based),
    - databases ([SQL]() or other systems).

- Allow interaction among different users.

- Be developed in pairs (delegations to this rule are possible in special circumstances).


You are **warmly encouraged to**:

- Use client side [JavaScript]() for animation, rendering and improve the user interface.

- Use [AJAX]() and other asynchronous systems (Websockets, etc.).

- Take into consideration security issues.


The project **MAY**:

- Use [Node.js]() optional modules and other sources written by others. Just clearly state what code you wrote and what code you borrowed.



# Examples

Here are some example projects you may get inspiration from. Feel free to edit this section by adding your own ideas (they will be validated by the instructor).


## Text based multi-user interaction

It is extremely easy (a few lines of code) to implement a simple irc style, non authenticated, static chat room in [Node.js]().

Starting from this idea, improve by adding some of the following features:

- Use [AJAX]() to improve polling for new messages,
- User authentification,
- User presence, status (talkative, busy, etc.),
- Personal messaging,
- Rich text (smileys, etc.),
- Plugin-style client widget, integrable in external pages,
- Interaction with external API's (google talk, facebook, etc.),
- ...

Related ideas:

- Implement a forum (very boring, unless you have a revolutionary idea),
- Implement a multi-user document editing app (much more exciting!).


## Two-player games

Implement a online chess game:

- For a very easy start without client-side [JavaScript](), you may input moves in a form using textual representation (like "knight in B2").
- Later on, you may improve the user interface with [JavaScript]() (why not use [Unobtrusive JavaScript](http://en.wikipedia.org/wiki/Unobtrusive_JavaScript)?) and [AJAX]().
- You may pair users on a first come, first served schedule.
- Later on, you may modify the code to identify users with database-based authentification and allow them to challenge other users, see games being played, etc.

The same ideas apply to many other two-player, turn-based games:

- Tic tac toe (*morpion*),
- Naval battle,
- Reversi,
- Scrabble,
- ...


## Hardcore API integration

The primary goal of this idea is to use external APIs (Google's, Facebook, etc.) to a great deal. Most of the work is done in the client rather than in the server.

**Example:** Write a service for students of the Versailles area to organize hangouts:

- Integrate with Google for maps.
- Integrate Facebook to find friends and publish the hangout.
- Why not to go mobile? Write a smartphone interface and integrate GPS positioning.


## Crazy ideas: real time multi-player games

Real time is a hard beast to master. Neverthless, see <http://browserquest.mozilla.org/> (implemented with [Node.js]())

More reasonable options are:

- two player pong,
- two player Bomberman,
- multiplayer tetris,
- ...


## Graphics

Especially if you develop a game, you may be tempted to add nice graphics to your application. Graphic programming in the browser, though very rewarding, is a hard matter. Think about it twice before diving into it, and be sure to develop first a simple textual version of your application. The [Web graphics]() page contains some suggestions.


# Project submission

Send the following items to the [instructor](http://www.prism.uvsq.fr/~dfl) by e-mail **before Sunday May 19, 20:00 CEST**. If you are late fixing a bug, the best choice is to send what you’ve done till the deadline, then try to fix the bug in time for the presentation.

**Source code:**

- All the source files: JavaScript, HTML, CSS, etc.
- If you use a database, the sqllite file, or an SQL export (at least what is needed to run the project),
- A readme file with instructions to install and run the project,
- Any other file needed to successfully run the project,
- No platform specific files, No compiled files, though a Unix shell script to help me install complicated projects will be appreciated.

Alternatively, you can host your project on <https://npmjs.org> using the command
  
~~~
npm publish
~~~

and then just send me the name of the project, so that I can install it by running `npm install`. Read the [documentation](https://npmjs.org/doc/) to learn how to write a `package.json` file for this purpose.


**Project summary:**

Your source code must be accompained by a short (two pages at most) summary:

- Written in French or English,
- Encoded in an open format (open document, pdf, etc.),
- Max 2000 words: one or two pages is the best,
- Describe what your project does, how you organized your work, what programming techniques you employed, what ideas you conceived, what difficulties you faced.
- Include a reflection on security.


## The defense

Here's the schedule for the project defenses. Book a time slot by writing next to it:

- Your names;
- The title of your project;
- If you have published your project online, a link to it.

Should any conflicts arise, try to solve them on the [discussion page](/_discuss/Project presentation) first.


### Tuesday May 21 (room **G101**)

**13:30 - 13:55 ---** 

**14:00 - 14:25 ---** Ibrahima Camara, Fatma Fall: *Chat*

**14:30 - 14:55 ---**  Lemdani Amine,Doufene Lynda: *ChatRoom*

**15:00 - 15:25 ---**  HAKKOUM Souad  : Forum

**15:30 - 15:55 ---** Hajar Doua, N’ Guessan Gnima Kuny Raïssa: *Chat room*

**16:00 - 16:25 ---** 

**16:30 - 16:55 ---** MANOUNI Soukaina et EL OUAKILI Asmaa 

**17:00 - 17:25 ---** 

**17:30 - 17:55 ---** 


### Wednesday May 22 (room **G101**)

**13:30 - 13:55 ---** Hasnaa Obazzi *Chat*

**14:00 - 14:25 ---** Alaya Ben Chikh Houda et Mariem Charfi

**14:30 - 14:55 ---** Reuzé Cyril et Nouveau Franck: *simple game*

**15:00 - 15:25 ---** ATCHENE AMNA

**15:30 - 15:55 ---** 

**16:00 - 16:25 ---** Eric RUKUNDO, Ning LI

**16:30 - 16:55 ---** 

**17:00 - 17:25 ---** 

**17:30 - 17:55 ---** Hamza sighari



### Thursay May 23 (room **G101**)


**09:30 - 10:55 ---** AMEUR Lyes, SAAD Kamel

**10:00 - 10:25 ---**  Sana REKIK

**10:30 - 10:55 ---** NAIT ATMANE KAHINA *un chat room*

**11:00 - 11:25 ---** Lamia BOUROUINA,Walid NAJJAR

**11:30 - 11:55 ---** Elie AL NAHAS, Gabriella TOVAR

**12:00 - 12:25 ---** HASSENA Lila et HASSAINE Lydia: *un simple chat room*

**12:30 - 12:55 ---** ALI mahmoud, BOUGHANI Rafik